# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

  platform :ios, '13.0'
prepare_react_native_project!

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
#flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

#linkage = ENV['USE_FRAMEWORKS']
#if linkage != nil
#  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
#  use_frameworks! :linkage => linkage.to_sym
#end

target 'Qirori' do
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Stripe configuration
  pod 'Stripe', :modular_headers => true
  pod 'stripe-react-native', :path => '../node_modules/@stripe/stripe-react-native'
  pod 'react-native-config/Extension', :path => '../node_modules/react-native-config'

  pod 'Firebase/Core', '10.29.0'
  pod 'Firebase/Auth', '10.29.0'
  pod 'Firebase/Firestore', '10.29.0'
  pod 'Firebase/Storage', '10.29.0'
  #pod 'gRPC-ProtoRPC', '~> 1.28.2'
  pod 'BoringSSL-GRPC', '~> 0.0.12'
  pod 'gRPC-Core', '~> 1.62.0'


  pod 'RNFBAuth', :path => '../node_modules/@react-native-firebase/auth'

  $static_framework = ['FlipperKit', 'Flipper', 'Flipper-Folly',
     'CocoaAsyncSocket', 'ComponentKit', 'DoubleConversion',
     'glog', 'Flipper-PeerTalk', 'Flipper-RSocket', 'Yoga', 'YogaKit',
     'CocoaLibEvent', 'OpenSSL-Universal', 'boost-for-react-native']

  pre_install do |installer|
     Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
     installer.pod_targets.each do |pod|
         if $static_framework.include?(pod.name)
           def pod.build_type;
             Pod::BuildType.static_library
           end
         end
       end
  end

  target 'QiroriTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
    installer.pods_project.build_configurations.each do |config|
      config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-unused-command-line-argument'
    end
    installer.pods_project.targets.each do |target|
      if target.name == 'BoringSSL-GRPC'
        target.source_build_phase.files.each do |file|
          if file.settings && file.settings['COMPILER_FLAGS']
            flags = file.settings['COMPILER_FLAGS'].split
            flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
            file.settings['COMPILER_FLAGS'] = flags.join(' ')
          end
        end
      end
    end
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
